" Let Vim and NeoVim shares the same plugin directory.
" Comment it out if you don't like
let g:spacevim_plug_home = '~/.vim/plugged'

" The default leader key is space key.
" Uncomment the line below and modify "<\Space>" if you prefer another
" let g:spacevim_leader = "<\Space>"

" The default local leader key is comma.
" Uncomment the line below and modify ',' if you prefer another
let g:spacevim_localleader = '\'

" Enable the existing layers in space-vim
let g:spacevim_layers = [
      \ 'fzf', 'better-defaults', 'which-key',
      \ ]

" If you want to have more control over the layer, try using Layer command.
" if g:spacevim.gui
"   Layer 'airline'
" endif

" Manage your own plugins, refer to vim-plug's instruction for more detials.
function! UserInit()

  " Add plugin via Plug command.
  Plug 'NLKNguyen/papercolor-theme'
  Plug 'Yggdroot/indentLine'
  Plug 'roman/golden-ratio'
  Plug 'junegunn/rainbow_parentheses.vim'
  Plug 'tpope/vim-commentary'
  Plug 'jiangmiao/auto-pairs'
  Plug 'zhou13/vim-easyescape'
  Plug 'ashish28ranjan/vim-autosave'
  Plug 'xolox/vim-misc'
  Plug 'xolox/vim-session'
  Plug 'rgarver/Kwbd.vim'
  " Plug 'takac/vim-hardtime'

endfunction

" Override the default settings as well as adding extras
function! UserConfig()
  " If you have installed the powerline fonts and want to enable airline layer
  " let g:airline_powerline_fonts=1

  " Use gui colors in terminal if available
  function! s:enable_termgui()
    if has('termguicolors')
      set termguicolors
      if g:spacevim.tmux
        " If use vim inside tmux, see https://github.com/vim/vim/issues/993
        " set Vim-specific sequences for RGB colors
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      endif
    endif
  endfunction

  " If your terminal(-emulator) supports true colors, uncomment the line below
  " call s:enable_termgui()

  call g:ChangeTheme(2)

  " Set listchars to display hidden characters
  set lcs=space:·,tab:>-,eol:↵,extends:→,precedes:←,nbsp:§

  " vim-which-key
  " Set timeout to 300 ms
  set timeoutlen=300

  " indentLine
  " Set the indent character guide
  let g:indentLine_char = '▏'

  " vim-better-whitespace
  " Set the background color of trailing whitespaces
  hi ExtraWhitespace cterm=bold ctermbg=red

  " rainbow-parentheses.vim
  " Enable rainbow parentheses on startup
  hi rainbowParensShell1 ctermfg=177 guifg=#d787ff
  hi rainbowParensShell2 ctermfg=36 guifg=#00af87
  hi rainbowParensShell3 ctermfg=167 guifg=#d75f5f
  hi rainbowParensShell4 ctermfg=169 guifg=#d75faf
  hi rainbowParensShell5 ctermfg=111 guifg=#87afff
  hi rainbowParensShell6 ctermfg=208 guifg=#ff8700
  hi rainbowParensShell7 ctermfg=207 guifg=#ff5fff
  hi rainbowParensShell8 ctermfg=148 guifg=#afd700
  hi rainbowParensShell9 ctermfg=45 guifg=#00d7ff
  hi rainbowParensShell10 ctermfg=197 guifg=#ff005f
  hi rainbowParensShell11 ctermfg=222 guifg=#ffd787
  hi rainbowParensShell12 ctermfg=43 guifg=#00d7af
  hi rainbowParensShell13 ctermfg=213 guifg=#ff87ff
  hi rainbowParensShell14 ctermfg=179 guifg=#d7af5f
  hi rainbowParensShell15 ctermfg=74 guifg=#5fafd7
  hi rainbowParensShell16 ctermfg=168 guifg=#d75f87

  call rainbow_parentheses#activate()

  " vim-autosave
  let g:autosave_backup = '~/.vim/autosave'
  " Autosave period (in milliseconds)
  let g:autosave_timer=60000

  " vim-session
  " Session autosave period (in minutes)
  let g:session_autosave_periodic = 0
  let g:session_default_name = 'default'
  let g:session_default_to_last = 1
  let g:session_command_aliases = 1

  " vim-easyescape
  let g:easyescape_chars = { "j": 1, "k": 1 }
  " python3 is required to leverage the following timeout feature
  " let g:easyescape_timeout = 100
  cnoremap jk <ESC>
  cnoremap kj <ESC>

  let g:startify_custom_header = [
    \'                       █▀▀▀▀▀▀▀▀▀▀▀▀▀▀█',
    \'                     ██▀▀▀██▀▀▀▀▀▀██▀▀▀██',
    \' Darude - Sandstorm  █▒▒▒▒▒█▒▀▀▀▀▒█▒▒▒▒▒█  **Plays aggresively**',
    \'                     █▒▒▒▒▒█▒████▒█▒▒▒▒▒█',
    \'                     ██▄▄▄██▄▄▄▄▄▄██▄▄▄██',
  \]
  let g:startify_custom_header = 'startify#fortune#cowsay()'


  " Set user key bindings
  " Toggle display of hidden characters
  map <leader>td :set list!<CR>
  " Toggle relative line numbers
  map <leader>tnr :set relativenumber!<CR>
  " Toggle word wrap
  map <leader>tw :set wrap!<CR>
  " Toggle indent lines
  map <leader>ti :IndentLinesToggle<CR>
  " TODO: Implement 'tz' binding to toggle golden ratio and balance windows
  map <leader>tz :GoldenRatioToggle<CR>
  " Delete buffer without closing window mapping
  nmap <leader>bd :Kwbd<CR>

endfunction

" Change theme
function! g:ChangeTheme(themeid)
  if a:themeid == 1
    " space-vim-dark
    colo space-vim-dark
    set background=dark
    " Set comment color to grey
    hi Comment ctermfg=240 guifg=#585858
    " vim_current_word
    " Set twin word highlight
    hi CurrentWord cterm=underline ctermbg=53 guibg=#5f005f
    hi CurrentWordTwins cterm=underline ctermbg=238 guibg=#444444

  elseif a:themeid == 2
    " PaperColor
    colo PaperColor
    set background=light
    " Set comment color to grey
    hi Comment ctermfg=246 guifg=#949494
    " vim_current_word
    " Set twin word highlight
    hi CurrentWord cterm=underline ctermbg=220 guibg=#ffd700
    hi CurrentWordTwins cterm=underline ctermbg=251 guibg=#c6c6c6
  endif

endfunction

let g:startify_custom_header = 'startify#fortune#cowsay()'

